// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // use "mysql" or "mongodb" if preferred
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid())
  fullName         String
  marriageStatus   MarriageStatus
  occupation       String?        // Optional
  placeOfBirth     String
  dateOfBirth      DateTime
  email            String         @unique
  cellPhone        String
  copyOfIdUrl      String         // Stored as file/image URL
  curp             String?        // Mexican CURP (optional)
  proofOfResidencyUrl String      // Stored as file/image URL
  lots             Lot[]          // One user can own multiple lots
  supabaseId       String         @unique // maps to Supabase's user ID

  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model Lot {
  id                String       @id @default(cuid())
  status            LotStatus
  price             Float
  amenities         String[]     // Store as array of strings (Postgres)
  width             Float
  length            Float
  height            Float
  ownerId           String?
  owner             User?        @relation(fields: [ownerId], references: [id])

  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  @@index([status])
  @@index([price])
}

// Enums

enum MarriageStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
}


enum LotStatus {
  PURCHASED
  SOLD
  PENDING
}

enum Amenities {
  GYM
  POOL
  PLAYGROUND
  PET_PARK
  YOGA
  BBQ_AREA
  GREAT_VIEW
  CLOSE_TO_AMMENITIES
  CORNER
}

enum UserRole {
  ADMIN
  BUYER
}
